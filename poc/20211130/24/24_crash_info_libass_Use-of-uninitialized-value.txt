Testcase id: 24
Job: libass_honggfuzz_msan
Crash Type: Use-of-uninitialized-value
isSecurity: True
Crash state: FcConfigFileExists
FcConfigFilename
_FcConfigParse
Poc: 24.testcase
engine: honggfuzz
fully_qualified_name: honggfuzz_libass_fuzzer
target: libass_fuzzer
name: honggfuzz
[Environment] MSAN_OPTIONS=allocator_release_to_os_interval_ms=500:halt_on_error=1:handle_abort=2:handle_segv=2:handle_sigbus=2:handle_sigfpe=2:handle_sigill=2:print_stats=1:print_summary=1:symbolize=0:use_sigaltstack=1
+----------------------------------------Release Build Stacktrace----------------------------------------+
Uninitialized bytes in __interceptor_strlen at offset 0 inside [0x7010000000e0, 11)
==1474==WARNING: MemorySanitizer: use-of-uninitialized-value
    #0 0x5940ee in FcConfigFileExists fccfg.o:0
    #1 0x596b9f in FcConfigFilename
    #2 0x5aeb11 in _FcConfigParse fcxml.o:0
    #3 0x590c6c in ass_fontconfig_add_provider /src/libass/libass/ass_fontconfig.c:333:10
    #4 0x585d39 in ass_fontselect_init /src/libass/libass/ass_fontselect.c:1118:21
    #5 0x5030e8 in ass_set_fonts /src/libass/libass/ass_render_api.c:157:24
    #6 0x4a3aa7 in init::init(int, int) /src/libass_fuzzer.cc:50:5
    #7 0x4a376d in LLVMFuzzerTestOneInput /src/libass_fuzzer.cc:61:15
    #8 0x4a42f4 in main
    #9 0x7ffff7c5b0b2 in __libc_start_main
    #10 0x41f15d in _start

  Uninitialized value was created by a heap allocation
    #0 0x44ff3d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/msan/msan_interceptors.cpp:912:3
    #1 0x596b3f in FcConfigFilename

SUMMARY: MemorySanitizer: use-of-uninitialized-value (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x5940ee)
Exiting


+----------------------------------------Release Build Unsymbolized Stacktrace (diff)----------------------------------------+

Uninitialized bytes in __interceptor_strlen at offset 0 inside [0x7010000000e0, 11)
==1474==WARNING: MemorySanitizer: use-of-uninitialized-value
    #0 0x5940ee  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x5940ee)
    #1 0x596b9f  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x596b9f)
    #2 0x5aeb11  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x5aeb11)
    #3 0x590c6c  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x590c6c)
    #4 0x585d39  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x585d39)
    #5 0x5030e8  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x5030e8)
    #6 0x4a3aa7  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x4a3aa7)
    #7 0x4a376d  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x4a376d)
    #8 0x4a42f4  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x4a42f4)
    #9 0x7ffff7c5b0b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #10 0x41f15d  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x41f15d)

  Uninitialized value was created by a heap allocation
    #0 0x44ff3d  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x44ff3d)
    #1 0x596b3f  (/clusterfuzz/run_bot/clusterfuzz/bot/builds/libass_honggfuzz_msan/custom/libass_fuzzer+0x596b3f)
    
    
Q: 为什么使用未初始化变量会带来很大的危害？

A: 在Windows和Linux等现代操作系统中，变量的值通常在被显式初始化之前是不确定的。这些未初始化的变量可能会危及系统的安全性，特别是当它们跨越不同的权限域时。内核使用内核地址空间布局随机化（KASLR）机制，如果一块内存中存放着kernel object的地址，使用那块内存的变量未进行初始化而泄漏到用户空间，将损害KASLR的安全性。攻击者可以根据泄漏的信息进行权限提升。
