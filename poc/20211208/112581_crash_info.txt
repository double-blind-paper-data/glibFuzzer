Testcase id: 112581
Job: gvisor_afl_asan
Crash Type: Fatal error
isSecurity: False
Crash state: out of memory
wire.(*Type).load
state.(*decodeState).Load.func2
state.safely
Poc: 112581.testcase
engine: afl
fully_qualified_name: afl_state_load_fuzz
target: state_load_fuzz
name: afl
[Environment] ASAN_OPTIONS=abort_on_error=1:alloc_dealloc_mismatch=0:allocator_may_return_null=1:allocator_release_to_os_interval_ms=500:allow_user_segv_handler=0:check_malloc_usable_size=0:detect_leaks=1:detect_odr_violation=0:detect_stack_use_after_return=1:fast_unwind_on_fatal=0:handle_abort=2:handle_segv=2:handle_sigbus=2:handle_sigfpe=2:handle_sigill=2:max_uar_stack_size_log=16:print_scariness=1:print_summary=1:print_suppressions=0:quarantine_size_mb=64:redzone=32:strict_memcmp=1:symbolize=0:use_sigaltstack=1
+----------------------------------------Release Build Stacktrace----------------------------------------+
runtime: out of memory: cannot allocate 134964511244288-byte block (3866624 in use)
fatal error: out of memory

goroutine 17 [running, locked to thread]:
runtime.throw({0x5c22d3, 0xfdf4})
	runtime/panic.go:1198 +0x71 fp=0x10c0000ab478 sp=0x10c0000ab448 pc=0x509331
runtime.(*mcache).allocLarge(0x243000, 0x7abfdfbf5069, 0xa0, 0x1)
	runtime/mcache.go:229 +0x22e fp=0x10c0000ab4d8 sp=0x10c0000ab478 pc=0x4ecb0e
runtime.mallocgc(0x7abfdfbf5069, 0x60f440, 0x1)
	runtime/malloc.go:1082 +0x5c5 fp=0x10c0000ab558 sp=0x10c0000ab4d8 pc=0x4e3ec5
runtime.makeslice(0x62a340, 0x10c000225560, 0x12f34a8)
	runtime/slice.go:98 +0x52 fp=0x10c0000ab580 sp=0x10c0000ab558 pc=0x51df32
gvisor.dev/gvisor/pkg/state/wire.loadString({0x62a340, 0x10c000225560})
	gvisor.dev/gvisor/pkg/state/wire/wire.go:259 +0x4d fp=0x10c0000ab5e0 sp=0x10c0000ab580 pc=0x59788d
gvisor.dev/gvisor/pkg/state/wire.loadType({0x62a340, 0x10c000225560})
	gvisor.dev/gvisor/pkg/state/wire/wire.go:677 +0xd7 fp=0x10c0000ab658 sp=0x10c0000ab5e0 pc=0x598ed7
gvisor.dev/gvisor/pkg/state/wire.(*Type).load(...)
	gvisor.dev/gvisor/pkg/state/wire/wire.go:699
gvisor.dev/gvisor/pkg/state/wire.Load({0x62a340, 0x10c000225560})
	gvisor.dev/gvisor/pkg/state/wire/wire.go:951 +0x7a9 fp=0x10c0000ab778 sp=0x10c0000ab658 pc=0x599b69
gvisor.dev/gvisor/pkg/state.(*decodeState).Load.func2()
	gvisor.dev/gvisor/pkg/state/decode.go:616 +0xbe fp=0x10c0000ab838 sp=0x10c0000ab778 pc=0x5a107e
gvisor.dev/gvisor/pkg/state.safely(0x62a340)
	gvisor.dev/gvisor/pkg/state/state.go:321 +0x71 fp=0x10c0000ab878 sp=0x10c0000ab838 pc=0x5a2a51
gvisor.dev/gvisor/pkg/state.(*decodeState).Load(0x10c00023fc00, {0x0, 0x0, 0x30})
	gvisor.dev/gvisor/pkg/state/decode.go:609 +0x445 fp=0x10c0000abb68 sp=0x10c0000ab878 pc=0x5a03e5
gvisor.dev/gvisor/pkg/state.Load.func1()
	gvisor.dev/gvisor/pkg/state/state.go:120 +0x18b fp=0x10c0000abbc0 sp=0x10c0000abb68 pc=0x5a25cb
gvisor.dev/gvisor/pkg/state.safely(0x7fa6a7d41168)
	gvisor.dev/gvisor/pkg/state/state.go:321 +0x71 fp=0x10c0000abc00 sp=0x10c0000abbc0 pc=0x5a2a51
gvisor.dev/gvisor/pkg/state.Load({0x62a780, 0x10c0000181b8}, {0x62a340, 0x10c000225560}, {0x623980, 0x0})
	gvisor.dev/gvisor/pkg/state/state.go:119 +0x1d1 fp=0x10c0000abd60 sp=0x10c0000abc00 pc=0x5a2391
gvisor.dev/gvisor.FuzzStateLoad({0x7fa6a64fc004, 0x39, 0x39})
	gvisor.dev/gvisor/state_fuzzer.go:28 +0xdf fp=0x10c0000abe08 sp=0x10c0000abd60 pc=0x5a7d7f
main.LLVMFuzzerTestOneInput(...)
	./main.1905356705.go:21
_cgoexp_e7a74286e976_LLVMFuzzerTestOneInput(0x7ffe9aa47708)
	_cgo_gotypes.go:47 +0x49 fp=0x10c0000abe30 sp=0x10c0000abe08 pc=0x5a7e29
runtime.cgocallbackg1(0x5a7de0, 0x10c0000abfe0, 0x0)
	runtime/cgocall.go:306 +0x29a fp=0x10c0000abf00 sp=0x10c0000abe30 pc=0x4db4fa
runtime.cgocallbackg(0x0, 0x0, 0x0)
	runtime/cgocall.go:232 +0x109 fp=0x10c0000abf90 sp=0x10c0000abf00 pc=0x4db1c9
runtime.cgocallbackg(0x5a7de0, 0x7ffe9aa47708, 0x0)
	&lt;autogenerated&gt;:1 +0x31 fp=0x10c0000abfb8 sp=0x10c0000abf90 pc=0x537831
runtime.cgocallback(0x0, 0x0, 0x0)
	runtime/asm_amd64.s:915 +0xb3 fp=0x10c0000abfe0 sp=0x10c0000abfb8 pc=0x5353f3
runtime.goexit()
	runtime/asm_amd64.s:1581 +0x1 fp=0x10c0000abfe8 sp=0x10c0000abfe0 pc=0x535621
